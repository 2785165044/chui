{"version":3,"sources":["assets\\Script\\Main\\SyncPostion.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,8DAA6D;AAC7D,wDAAuD;AAEjD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA0C,gCAAY;IAAtD;QAAA,qEA+CC;QA7CW,mBAAa,GAAW,CAAC,CAAC;;IA6CtC,CAAC;IA5CG,4BAAK,GAAL;QAAA,iBAcC;QAbG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,iCAAe,CAAC,EAAE,CAAC,qBAAS,CAAC,QAAQ,EAAE;YACnC,IAAI,KAAI,CAAC,IAAI,EAAE;gBACX,KAAI,CAAC,sBAAsB,EAAE,CAAC;aACjC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,iCAAe,CAAC,EAAE,CAAC,qBAAS,CAAC,QAAQ,EAAE;YACnC,IAAI,KAAI,CAAC,IAAI,EAAE;gBACX,KAAI,CAAC,sBAAsB,EAAE,CAAC;aACjC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAED,oBAAoB;IACpB,qCAAc,GAAd,UAAe,OAAO,EAAE,YAAY,EAAE,aAAa;QAC/C,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;YACpC,2BAAY,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACpD;IACL,CAAC;IAED,mBAAmB;IACnB,kCAAW,GAAX,UAAY,OAAO,EAAE,YAAY,EAAE,aAAa;IAEhD,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC3D;IACL,CAAC;IAED,6CAAsB,GAAtB;QACI,UAAU;QACV,IAAI,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC;QAC9C,IAAI,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC;QAChD,IAAI,WAAW,IAAI,UAAU,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;SAC5C;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;SAC5C;IACL,CAAC;IA9CgB,YAAY;QADhC,OAAO;OACa,YAAY,CA+ChC;IAAD,mBAAC;CA/CD,AA+CC,CA/CyC,EAAE,CAAC,SAAS,GA+CrD;kBA/CoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { EventType } from \"../Data/EventType\";\r\nimport { ListenerManager } from \"../Manager/ListenerManager\";\r\nimport { SoundManager } from \"../Manager/SoundManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SyncPosition extends cc.Component {\r\n\r\n    private initNodeScale: number = 1;\r\n    start() {\r\n        this.initNodeScale = this.node.scale;\r\n        this.changeDesignResolution();\r\n        ListenerManager.on(EventType.SCREEN_V, () => {\r\n            if (this.node) {\r\n                this.changeDesignResolution();\r\n            }\r\n        }, this);\r\n\r\n        ListenerManager.on(EventType.SCREEN_H, () => {\r\n            if (this.node) {\r\n                this.changeDesignResolution();\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    // 每次将要处理碰撞体接触逻辑时被调用\r\n    onBeginContact(contact, selfCollider, otherCollider) {\r\n        if (selfCollider.node.name == \"huodui\") {\r\n            SoundManager.playEffect(\"diaoluo\", false, false);\r\n        }\r\n    }\r\n\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve(contact, selfCollider, otherCollider) {\r\n\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.node.getComponent(cc.RigidBody)) {\r\n            this.node.getComponent(cc.RigidBody).syncPosition(true);\r\n        }\r\n    }\r\n\r\n    changeDesignResolution() {\r\n        //获取当前屏幕宽高\r\n        let frameWidth = cc.view.getFrameSize().width;\r\n        let frameHeight = cc.view.getFrameSize().height;\r\n        if (frameHeight >= frameWidth) {\r\n            this.node.scale = 1 * this.initNodeScale;\r\n        } else {\r\n            this.node.scale = 1 * this.initNodeScale;\r\n        }\r\n    }\r\n}\r\n"]}