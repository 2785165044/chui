{"version":3,"sources":["assets\\Script\\Manager\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ConstValue } from \"../Data/ConstValue\";\r\nimport { GameManager } from \"./GameManager\";\r\n\r\n/**\r\n * 常用方法工具类\r\n */\r\nclass UtilsClass {\r\n    private static _instance: UtilsClass = null;\r\n    public static getInstance(): UtilsClass {\r\n        if (this._instance === null) {\r\n            this._instance = new UtilsClass();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 设置节点spriteFrame\r\n     * @param node 节点\r\n     * @param name 图片name(图片需要放在resources/images文件夹下)\r\n     */\r\n    setSpriteFrame(node: cc.Node, name: string) {\r\n        let path = \"images/\" + name;\r\n        cc.loader.loadRes(path, cc.SpriteFrame, (err, spriteFrame) => {\r\n            node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        });\r\n    }\r\n\r\n    /**\r\n    * 多语言设置文本内容\r\n    * @param node \r\n    * @param labelName \r\n    */\r\n    setLabelString(node: cc.Node, labelName: string) {\r\n        let path = ConstValue.JSON_DIR + \"LanguageData\";\r\n        let languageName: string = null;\r\n        if (!GameManager.isMultilingual) {\r\n            languageName = \"en\";\r\n        } else {\r\n            languageName = cc.sys.languageCode.slice(0, 2);\r\n        }\r\n        cc.loader.loadRes(path, cc.JsonAsset, (err, language: cc.JsonAsset) => {\r\n            if (err || language.json[languageName][labelName] == undefined) {\r\n                return;\r\n            } else {\r\n                node.getComponent(cc.Label).string = language.json[languageName][labelName];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * 随机数\r\n    * @param min 最小数\r\n    * @param max 最大数\r\n    */\r\n    randomNumber(min: any, max: any): any {\r\n        return Math.floor(\r\n            parseInt(\r\n                Math.random() * (max - min + 1) + min, 10)\r\n        );\r\n    }\r\n\r\n    /**\r\n    * 数组随机排序\r\n    * @param arr 需要重新排序的数组\r\n    */\r\n    shuffle(arr) {\r\n        let i = arr.length;\r\n        while (i) {\r\n            let j = Math.floor(Math.random() * i--);\r\n            [arr[j], arr[i]] = [arr[i], arr[j]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获取旋转角度\r\n     * @param startPos 起始点坐标\r\n     * @param endPos 终点坐标\r\n     * @returns \r\n     */\r\n    getAngle(startPos: cc.Vec2 | cc.Vec3, endPos: cc.Vec2 | cc.Vec3) {\r\n        let x = endPos.x - startPos.x;\r\n        let y = endPos.y - startPos.y\r\n        let radian = Math.atan2(y, x)  //弧度   \r\n        let angle = radian * 180 / Math.PI;  //角度   \r\n        return angle;\r\n    }\r\n\r\n    /**\r\n     * 以某点为圆心，生成圆周上等分点的坐标\r\n     *\r\n     * @param {number} r 半径\r\n     * @param {cc.Vec2} pos 圆心坐标\r\n     * @param {number} count 等分点数量\r\n     * @param {number} [randomScope=80] 等分点的随机波动范围\r\n     * @returns {cc.Vec2[]} 返回等分点坐标\r\n     */\r\n    getCirclePoints(r: number, pos: cc.Vec2, count: number, randomScope: number = 60): cc.Vec2[] {\r\n        let points = [];\r\n        let radians = (Math.PI / 180) * Math.round(360 / count);\r\n        for (let i = 0; i < count; i++) {\r\n            let x = pos.x + r * Math.sin(radians * i);\r\n            let y = pos.y + r * Math.cos(radians * i);\r\n            points.unshift(cc.v3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));\r\n        }\r\n        return points;\r\n    }\r\n\r\n    /**\r\n     * 获取移动时间\r\n     * @param startPos 起始位置坐标\r\n     * @param endPos 终点位置坐标\r\n     * @param moveSpeed 移动速度\r\n     * @returns 移动时间\r\n     */\r\n    getMoveTime(startPos: cc.Vec2, endPos: cc.Vec2, moveSpeed: number) {\r\n        // let distance = Math.sqrt(Math.pow((endPos.x - startPos.x), 2) + Math.pow((endPos.y - startPos.y), 2));\r\n        let distance = startPos.sub(endPos).mag();\r\n        let time = distance / moveSpeed;\r\n        return time;\r\n    }\r\n\r\n    /**\r\n     * 播放spine动画\r\n     * @param {*} node 动画文件节点\r\n     * @param {*} animName 动作名称\r\n     * @param {*} loop 是否循环\r\n     * @param {*} callback 播放完毕回调\r\n     */\r\n    playSpine(node: cc.Node, animName: string, loop: boolean = true, callback: any = null) {\r\n        // sp_Skeleton.premultipliedAlpha=false;//这样设置在cocos creator中才能有半透明效果\r\n\r\n        // let spine = this.node.getComponent(sp.Skeleton);\r\n        let sp_Skeleton = node.getComponent(sp.Skeleton);\r\n        let track = sp_Skeleton.setAnimation(0, animName, loop);\r\n        if (track) {\r\n            // 注册动画的结束回调\r\n            sp_Skeleton.setCompleteListener((trackEntry, loopCount) => {\r\n                let name = trackEntry.animation ? trackEntry.animation.name : '';\r\n                if (name === animName && callback && callback != null) {\r\n                    callback(); // 动画结束后执行自己的逻辑\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取字符中的数字\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getNum(str: string) {\r\n        var value = str.replace(/[^0-9]/ig, \"\");\r\n        return Number(value);\r\n    }\r\n\r\n    /**\r\n     * 获取字符中非数字的字符\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getString(str: string) {\r\n        var value = str.match(/\\D/ig);\r\n        let lastValue = value.join(\"\");\r\n        return String(lastValue);\r\n    }\r\n\r\n    /**\r\n     * 获取当前节点转换到某节点下的坐标\r\n     * @param curNode \r\n     * @param targetNode \r\n     * @returns \r\n     */\r\n    getNodePos(curNode: cc.Node, targetNode: cc.Node) {\r\n        let worldPos = curNode.parent.convertToWorldSpaceAR(curNode.position);\r\n        let pos = targetNode.convertToNodeSpaceAR(worldPos);\r\n        return cc.v2(pos);\r\n    }\r\n\r\n    /**\r\n     * 播放上下浮动动画\r\n     * @param node\r\n     * @param time \r\n     * @param distance \r\n     */\r\n    playNodeFloatAction(node: cc.Node, time: number, distance: number) {\r\n        node.runAction(\r\n            cc.repeatForever(\r\n                cc.sequence(\r\n                    cc.moveTo(time, node.x, node.y + distance),\r\n                    cc.moveTo(time - 0.05, node.x, node.y - distance),\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 显示气泡\r\n     * @param bubble 气泡节点\r\n     * @param callback 显示气泡后的回调函数\r\n     */\r\n    displayBubble(bubble: cc.Node, callback: Function = null) {\r\n        bubble.active = true;\r\n        bubble.scale = 0;\r\n        bubble.runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0.3, 1).easing(cc.easeBackOut()),\r\n                cc.callFunc(() => {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                })\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 果冻效果\r\n     * @param node \r\n     * @param multiple scale\r\n     * @param callback 结束回调\r\n     */\r\n    JellyEffect(node: cc.Node, multiple: number, callback?: Function) {\r\n        function generate_action(params) {\r\n            var scale_action = cc.scaleTo(params.time, params.scale_x, params.scale_y);\r\n            var fade_action = cc.fadeIn(params.time);\r\n            return cc.spawn(scale_action, fade_action);\r\n        }\r\n\r\n        var spawn_action1 = generate_action({ time: 0.06, scale_x: 0.63 * multiple, scale_y: 1.3 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action2 = generate_action({ time: 0.12, scale_x: 1.1 * multiple, scale_y: 0.7 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action3 = generate_action({ time: 0.07, scale_x: 0.8 * multiple, scale_y: 1.1 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action4 = generate_action({ time: 0.07, scale_x: 1.1 * multiple, scale_: 0.95 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action5 = generate_action({ time: 0.07, scale_x: 1 * multiple, scale_y: 1 * multiple, scale_z: 1 * multiple });\r\n        node.runAction(cc.sequence(\r\n            spawn_action1,\r\n            spawn_action2,\r\n            spawn_action3,\r\n            spawn_action4,\r\n            spawn_action5,\r\n            cc.callFunc(() => {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            })\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * 求点C在直线AB上的垂点坐标\r\n     * @param posA \r\n     * @param posB \r\n     * @param posC \r\n     * @returns \r\n     */\r\n    getVerticalPointPos(posA: cc.Vec2, posB: cc.Vec2, posC: cc.Vec2) {\r\n        let pointA = cc.v2(posA);\r\n        let pointB = cc.v2(posB);\r\n        let pointC = cc.v2(posC);\r\n\r\n        let vecAB = cc.v2(pointB.x - pointA.x, pointB.y - pointA.y);\r\n        let vecAC = cc.v2(pointC.x - pointA.x, pointC.y - pointA.y);\r\n\r\n        let dotProd = vecAB.dot(vecAC);\r\n        let lenAB = vecAB.mag();\r\n        let projLen = dotProd / lenAB;\r\n        let projVec = vecAB.normalizeSelf().mul(projLen);\r\n\r\n        let pointD = pointA.add(projVec);\r\n\r\n        return pointD;\r\n    }\r\n\r\n    /**\r\n     * 设置视频clip\r\n     * @param node 节点\r\n     * @param name 视频name(视频需要放在resources/videos文件夹下)\r\n     */\r\n    setVideoClip(node: cc.Node, name: string) {\r\n        let path = ConstValue.VIDEOS_DIR + name;\r\n        cc.loader.loadRes(path, cc.Asset, (err, videoClip) => {\r\n            node.getComponent(cc.VideoPlayer).clip = videoClip;\r\n        });\r\n    }\r\n\r\n    /**\r\n      * 指定视频从哪个时间点开始播放\r\n      * @param videoNode cc.Node视频节点\r\n      * @param time 时间（s）\r\n      */\r\n    setVideoCurrentTime(videoNode: cc.Node, time: number) {\r\n        if (cc.sys.os === cc.sys.OS_IOS && cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ) {\r\n            //在ios上qq浏览器需要特殊处理\r\n            let sourceNode = videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video;\r\n            sourceNode.currentTime = time;\r\n        } else {\r\n            videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video.currentTime = time;\r\n        }\r\n    }\r\n\r\n    /**\r\n      * 设置视频播放速率\r\n      * @param video cc.Node视频节点\r\n      * @param rate number\r\n      */\r\n    setVideoPlaybackRate(videoNode: cc.Node, rate: number) {\r\n        if (cc.sys.os === cc.sys.OS_IOS && cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ) {\r\n            //在ios上qq浏览器需要特殊处理\r\n            let sourceNode = videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video;\r\n            sourceNode.playbackRate = rate;\r\n        } else {\r\n            videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video.playbackRate = rate;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置视频模糊\r\n     * @param videoNode cc.Node视频节点\r\n     */\r\n    setVideoBlur(videoNode: cc.Node) {\r\n        if (cc.sys.os === cc.sys.OS_IOS && cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ) {\r\n            //在ios上qq浏览器需要特殊处理\r\n            let sourceNode = videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video;\r\n            sourceNode.style.filter = \"blur(20px)\";\r\n        } else {\r\n            videoNode.getComponent(cc.VideoPlayer)[\"_impl\"]._video.style.filter = \"blur(20px)\";\r\n        }\r\n    }\r\n\r\n    /**\r\n   * 水平翻转（卡片翻转）\r\n   * @param node 节点\r\n   * @param duration 总时长\r\n   * @param onMiddle 中间状态回调\r\n   * @param onComplete 完成回调\r\n   */\r\n    flip(node: cc.Node, duration: number, onMiddle?: Function, onComplete?: Function): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            const tween = cc.tween,\r\n                time = duration / 3,\r\n                scaleX = node.scale,\r\n                skewY = scaleX > 0 ? 20 : -20;\r\n            tween(node)\r\n                .parallel(\r\n                    tween().to(time, { scaleX: 0 }, { easing: 'quadIn' }),\r\n                    tween().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\r\n                )\r\n                .call(() => {\r\n                    onMiddle && onMiddle();\r\n                })\r\n                .parallel(\r\n                    tween().to(time, { scaleX: -scaleX }, { easing: 'quadOut' }),\r\n                    tween().to(time, { skewY: 0 }, { easing: 'quadIn' }),\r\n                )\r\n                .call(() => {\r\n                    onMiddle && onMiddle();\r\n                })\r\n                .parallel(\r\n                    tween().to(time, { scaleX: scaleX }, { easing: 'quadOut' }),\r\n                    tween().to(time, { skewY: 0 }, { easing: 'quadIn' }),\r\n                )\r\n                .call(() => {\r\n                    onComplete && onComplete();\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n  * 2D节点绕Y轴旋转一圈动画\r\n  * @param node 要旋转的节点\r\n  * @param duration 动画时长\r\n  * @param onComplete 完成回调\r\n  */\r\n    flipY(node: cc.Node, duration: number, onComplete?: Function): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            const originalScale = node.scaleX;\r\n\r\n            // 使用更平滑的缓动函数\r\n            const smoothEasing = {\r\n                easing: 'sineInOut',\r\n                progress: (start, end, current, ratio) => {\r\n                    // 使用更平滑的曲线\r\n                    const progress = ratio < 0.5\r\n                        ? 2 * ratio * ratio\r\n                        : 1 - Math.pow(-2 * ratio + 2, 2) / 2;\r\n                    return start + (end - start) * progress;\r\n                }\r\n            };\r\n\r\n            cc.tween(node)\r\n                .to(duration, {\r\n                    scaleX: -originalScale\r\n                }, smoothEasing)\r\n                .call(() => {\r\n                    onComplete && onComplete();\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    // ... existing code ...\r\n\r\n    //数字按照三个一组用逗号隔开\r\n    formatNumber(number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n}\r\n\r\nexport const Utils = UtilsClass.getInstance();"]}