{"version":3,"sources":["assets\\Script\\Manager\\NodeActionManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * 节点动画管理类\r\n * @param playNodeMoveAction 播放节点移动动画\r\n * @param playNodeScaleAction 播放节点缩放动画\r\n * @param stopNodeAction 停止节点正在播放动画\r\n */\r\nclass NodeActionManagerClass {\r\n    public static instance: NodeActionManagerClass = null;\r\n    public static getInstance(): NodeActionManagerClass {\r\n        if (this.instance == null) {\r\n            this.instance = new NodeActionManagerClass();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    /**当前手指移动坐标数组 */\r\n    private curPosArr: cc.Vec2[] = [];\r\n\r\n    /**移动时间数组 */\r\n    private moveTimeArr: number[] = [];\r\n\r\n    /**节点大小 */\r\n    private nodeScale: number = 1;\r\n\r\n    /**\r\n     * 停止节点正在播放动画 \r\n     * @param node 需要停止正在播放动画的节点\r\n     */\r\n    public stopNodeAction(node: cc.Node) {\r\n        node.stopAllActions();\r\n        this.curPosArr = [];\r\n        this.moveTimeArr = [];\r\n        node.scale = 0;\r\n        node.opacity = 0;\r\n    }\r\n\r\n    /**\r\n     * 播放节点移动动画\r\n     * @param node 需要播放动画的节点\r\n     * @param posArr 移动坐标数组，长度应大于等于2，且数组中第一个元素为节点起始位置\r\n     * @param moveSpeed 移动速度，默认为500\r\n     * @param loop 是否循环播放移动动画，默认循环\r\n     * @param loopCount 不循环播放情况下，播放次数，默认为1\r\n     * @param callback 播放完成回调，默认为null\r\n     * @returns \r\n     */\r\n    public playNodeMoveAction(\r\n        node: cc.Node, posArr: cc.Vec2[],\r\n        moveSpeed: number = 500,\r\n        loop: boolean = true,\r\n        loopCount: number = 1,\r\n        callback: Function = null,\r\n    ) {\r\n        if (posArr.length < 2) {\r\n            cc.error(\"参数错误::cc.Vec2[]长度应大于等于2，且数组中第一个元素为手指起始位置\");\r\n            return;\r\n        }\r\n        node.stopAllActions();\r\n        this.curPosArr = [];\r\n        this.moveTimeArr = [];\r\n        this.curPosArr = posArr;\r\n        //获取每段距离移动所需时间\r\n        this.curPosArr.forEach((value, index, arr) => {\r\n            if (index < arr.length - 1) {\r\n                let distance = arr[index].sub(arr[index + 1]).mag();\r\n                let time = distance / moveSpeed;\r\n                this.moveTimeArr.push(time);\r\n            }\r\n        });\r\n        this.nodeMoveAction(node, 0, loop, loopCount, callback);\r\n    }\r\n\r\n    /**\r\n     * 节点移动动画\r\n     * @param node 需要播放动画的节点\r\n     * @param index 播放第几段动画\r\n     * @param loop 是否循环播放移动动画\r\n     * @param loopCount 不循环播放情况下，播放次数\r\n     * @param callback 播放完成回调，默认为null\r\n     */\r\n    private nodeMoveAction(node: cc.Node, index: number, loop: boolean, loopCount: number, callback: Function) {\r\n\r\n        if (this.curPosArr.length <= 2) {\r\n            node.runAction(\r\n                cc.sequence(\r\n                    cc.callFunc(() => {\r\n                        node.setPosition(this.curPosArr[0]);\r\n                    }),\r\n                    cc.spawn(\r\n                        cc.scaleTo(0.2, this.nodeScale),\r\n                        cc.fadeIn(0.2)\r\n                    ),\r\n                    cc.moveTo(this.moveTimeArr[index], this.curPosArr[index + 1]),\r\n                    cc.spawn(\r\n                        cc.scaleTo(0.2, 0),\r\n                        cc.fadeOut(0.2)\r\n                    ),\r\n                    cc.callFunc(() => {\r\n                        if (loop) {\r\n                            index = 0;\r\n                            this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n                        } else {\r\n                            loopCount -= 1;\r\n                            if (loopCount <= 0) {\r\n                                if (callback) {\r\n                                    callback();\r\n                                }\r\n                                return;\r\n                            }\r\n                            this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n\r\n                        }\r\n                    })\r\n                )\r\n            );\r\n        } else {\r\n            if (index == 0) {\r\n                node.runAction(\r\n                    cc.sequence(\r\n                        cc.callFunc(() => {\r\n                            node.setPosition(this.curPosArr[0]);\r\n                        }),\r\n                        cc.spawn(\r\n                            cc.scaleTo(0.2, this.nodeScale),\r\n                            cc.fadeIn(0.2)\r\n                        ),\r\n                        cc.moveTo(this.moveTimeArr[index], this.curPosArr[index + 1]),\r\n                        cc.callFunc(() => {\r\n                            index += 1;\r\n                            this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n\r\n                        })\r\n                    )\r\n                );\r\n            } else if (index == this.moveTimeArr.length - 1) {\r\n                node.runAction(\r\n                    cc.sequence(\r\n                        cc.moveTo(this.moveTimeArr[index], this.curPosArr[index + 1]),\r\n                        cc.spawn(\r\n                            cc.scaleTo(0.2, 0),\r\n                            cc.fadeOut(0.2)\r\n                        ),\r\n                        cc.callFunc(() => {\r\n                            if (loop) {\r\n                                index = 0;\r\n                                this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n\r\n                            } else {\r\n                                loopCount -= 1;\r\n                                if (loopCount <= 0) {\r\n                                    if (callback) {\r\n                                        callback();\r\n                                    }\r\n                                    return;\r\n                                }\r\n                                this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n\r\n                            }\r\n                        })\r\n                    )\r\n                );\r\n            } else {\r\n                node.runAction(\r\n                    cc.sequence(\r\n                        cc.moveTo(this.moveTimeArr[index], this.curPosArr[index + 1]),\r\n                        cc.callFunc(() => {\r\n                            index += 1;\r\n                            this.nodeMoveAction(node, index, loop, loopCount, callback);\r\n                        })\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放节点缩放动画\r\n     * @param node 需要播放动画的节点\r\n     * @param nodeMaxScale 节点缩放最大值\r\n     * @param nodeMinScale 节点缩放最小值\r\n     * @param pos 节点位置\r\n     * @param loop 是否循环，默认循环\r\n     * @param loopCount 不循环，循环次数，默认为1\r\n     * @param callback 播放完成回调，默认为null\r\n     */\r\n    public playScaleAction(\r\n        node: cc.Node,\r\n        nodeMaxScale: number,\r\n        nodeMinScale: number,\r\n        pos?: cc.Vec3 | cc.Vec2,\r\n        loop: boolean = true,\r\n        loopCount: number = 1,\r\n        callback: Function = null\r\n    ) {\r\n        node.stopAllActions();\r\n        if (pos) {\r\n            node.setPosition(pos);\r\n        }\r\n        node.opacity = 255;\r\n        if (loop) {\r\n            node.runAction(\r\n                cc.repeatForever(\r\n                    cc.sequence(\r\n                        cc.scaleTo(0.3, nodeMaxScale),\r\n                        cc.scaleTo(0.3, nodeMinScale)\r\n                    )\r\n                )\r\n            );\r\n        } else {\r\n            node.runAction(\r\n                cc.sequence(\r\n                    cc.repeat(\r\n                        cc.sequence(\r\n                            cc.scaleTo(0.3, nodeMaxScale),\r\n                            cc.scaleTo(0.3, nodeMinScale)\r\n                        )\r\n                        , loopCount),\r\n                    cc.callFunc(() => {\r\n                        node.stopAllActions();\r\n                        callback();\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放上下浮动动画\r\n     * @param node\r\n     * @param time \r\n     * @param distance \r\n     */\r\n    playNodeFloatAction(node: cc.Node, time: number, distance: number) {\r\n        node.runAction(\r\n            cc.repeatForever(\r\n                cc.sequence(\r\n                    cc.moveTo(time, node.x, node.y + distance),\r\n                    cc.moveTo(time - 0.05, node.x, node.y - distance),\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n\r\n    /**果冻效果 */\r\n    JellyEffect(node: cc.Node, multiple: number, callback?: Function) {\r\n        function generate_action(params) {\r\n            var scale_action = cc.scaleTo(params.time, params.scale_x, params.scale_y);\r\n            var fade_action = cc.fadeIn(params.time);\r\n            return cc.spawn(scale_action, fade_action);\r\n        }\r\n\r\n        var spawn_action1 = generate_action({ time: 0.06, scale_x: 0.63 * multiple, scale_y: 1.3 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action2 = generate_action({ time: 0.12, scale_x: 1.1 * multiple, scale_y: 0.7 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action3 = generate_action({ time: 0.07, scale_x: 0.8 * multiple, scale_y: 1.1 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action4 = generate_action({ time: 0.07, scale_x: 1.1 * multiple, scale_: 0.95 * multiple, scale_z: 1 * multiple });\r\n        var spawn_action5 = generate_action({ time: 0.07, scale_x: 1 * multiple, scale_y: 1 * multiple, scale_z: 1 * multiple });\r\n        node.runAction(cc.sequence(\r\n            spawn_action1,\r\n            spawn_action2,\r\n            spawn_action3,\r\n            spawn_action4,\r\n            spawn_action5,\r\n            cc.callFunc(() => {\r\n                callback();\r\n            })\r\n        ));\r\n    }\r\n}\r\nexport const NodeActionManager = NodeActionManagerClass.getInstance();\r\n"]}