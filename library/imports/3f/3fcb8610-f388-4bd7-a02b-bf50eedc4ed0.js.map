{"version":3,"sources":["assets\\Script\\Main\\CardCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { EventType } from \"../Data/EventType\";\r\nimport { GameManager } from \"../Manager/GameManager\";\r\nimport { ListenerManager } from \"../Manager/ListenerManager\";\r\nimport { SoundManager } from \"../Manager/SoundManager\";\r\nimport { Utils } from \"../Manager/Utils\";\r\nimport Ball from \"./Ball\";\r\nimport SetLevel from \"./SetLevel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CardCtrl extends cc.Component {\r\n\r\n    private bingoParent: cc.Node = null;\r\n\r\n    private numberNodeParent: cc.Node = null;\r\n\r\n    private hand: cc.Node = null;\r\n    //当前需要点击的数字\r\n    private curNum: number = -1;\r\n    //bingo次数\r\n    private bingoNum: number = 0;\r\n    //是否可以点击\r\n    private canTouch: boolean = true;\r\n    //点击正确数量\r\n    private rightNum: number = 0;\r\n\r\n    //每列的数字\r\n    private numberArr: number[][] = [];\r\n\r\n    //当前需要点击的节点\r\n    private targetNode: cc.Node = null;\r\n\r\n    private rowCount: number = 5;\r\n\r\n    private colCount: number = 5;\r\n\r\n    private selectNode: cc.Node = null;\r\n    start() {\r\n        this.hand = this.node.getChildByName(\"hand\");\r\n        this.bingoParent = this.node.getChildByName(\"bingoParent\");\r\n        this.numberArr = this.node.getComponent(SetLevel).displayLevel(GameManager.cardNumArr);\r\n        this.numberNodeParent = this.node.getChildByName(\"parent\");\r\n\r\n        // this.initCheeseBackground();\r\n        // for (let i = 0; i < this.numberNodeParent.childrenCount; i++) {\r\n        // let node = this.numberNodeParent.children[i];\r\n        // let col: number = Number(node.name.split(\"\")[1]);\r\n        // // 如果stone节点需要每列不同的图标，可以在这里设置\r\n        // Utils.setSpriteFrame(node.getChildByName(\"stone\"), \"stone\" + col);\r\n        // }\r\n\r\n        ListenerManager.on(EventType.DISPLAY_HAND, (num: number) => {\r\n            this.targetNode = this.getTargetNode(num);\r\n            if (this.targetNode) {\r\n                this.curNum = num;\r\n                this.displayHand();\r\n                ListenerManager.dispatch(EventType.NEED_TOUCH_CARD, this.targetNode);\r\n            }\r\n        }, this);\r\n\r\n        ListenerManager.on(EventType.TOUCH_ITEM, (touchNode: cc.Node) => {\r\n            this.onTouchNum(touchNode);\r\n        }, this);\r\n    }\r\n    //      private initCheeseBackground() {\r\n    //     // 为每个数字节点设置奶酪背景和数字图片\r\n    //     for (let i = 0; i < this.numberNodeParent.childrenCount; i++) {\r\n    //         let node = this.numberNodeParent.children[i];\r\n    //         let row: number = Number(node.name.split(\"\")[0]);\r\n    //         let col: number = Number(node.name.split(\"\")[1]);\r\n            \r\n    //         // 设置奶酪背景图片\r\n    //         let cheeseBg = node.getChildByName(\"cheese\");\r\n    //         if (cheeseBg) {\r\n    //             Utils.setSpriteFrame(cheeseBg, \"cheese\" + (col + 1));\r\n    //         }\r\n            \r\n    //         // 获取数字并设置数字图片\r\n    //         let labelNode = node.getChildByName(\"label\");\r\n    //         if (labelNode) {\r\n    //             let num: number = Number(labelNode.getComponent(cc.Label).string);\r\n                \r\n    //             // 隐藏文本标签\r\n    //             labelNode.active = false;\r\n                \r\n    //             // 显示数字图片\r\n    //             let numberSpriteNode = node.getChildByName(\"number_sprite\");\r\n    //             if (numberSpriteNode) {\r\n    //                 numberSpriteNode.active = true;\r\n    //                 Utils.setSpriteFrame(numberSpriteNode, num.toString());\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n        getTargetNode(num: number) {\r\n        for (let i = 0; i < this.numberNodeParent.childrenCount; i++) {\r\n            let labelNum: number = Number(this.numberNodeParent.children[i].getChildByName(\"label\").getComponent(cc.Label).string);\r\n            if (labelNum == num) {\r\n                return this.numberNodeParent.children[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    displayHand() {\r\n        this.unscheduleAllCallbacks();\r\n        this.hand.setPosition(Utils.getNodePos(this.targetNode, this.hand.parent));\r\n        this.hand.active = true;\r\n        this.hand.runAction(\r\n            cc.repeatForever(\r\n                cc.sequence(\r\n                    cc.scaleTo(0.25, 0.9),\r\n                    cc.scaleTo(0.25, 1)\r\n                )\r\n            )\r\n        );\r\n\r\n        this.targetNode.getChildByName(\"tip\").active = true;\r\n    }\r\n\r\n    hideHand() {\r\n        this.unscheduleAllCallbacks();\r\n        this.hand.stopAllActions();\r\n        this.hand.active = false;\r\n    }\r\n\r\n    onTouchNum(touchNode: cc.Node) {\r\n        if (!this.canTouch || touchNode.parent != this.numberNodeParent) {\r\n            return;\r\n        }\r\n        let labelNode: cc.Node = touchNode.getChildByName(\"label\");\r\n        let touchNum: number = Number(labelNode.getComponent(cc.Label).string);\r\n        SoundManager.playEffect(\"click\", false, false, false);\r\n\r\n        if (touchNum == this.curNum) {\r\n            this.rightNum += 1;\r\n            this.hideHand();\r\n            //点击正确后全部变为0\r\n            labelNode.getComponent(cc.Label).string = \"0\";\r\n\r\n            touchNode.getChildByName(\"tip\").active = false;\r\n            this.node.getComponent(SetLevel).removeTouchEvent(touchNode);\r\n\r\n            touchNode.getChildByName(\"stone\").active = false;\r\n            touchNode.getChildByName(\"right\").active = true;\r\n            let col: number = Number(touchNode.name.split(\"\")[1]);\r\n            // Utils.setSpriteFrame(touchNode.getChildByName(\"right\"), \"item\" + col);\r\n\r\n            Utils.flipY(touchNode.getChildByName(\"right\"), 0.5, () => {\r\n                this.checkBingo(this.numberArr);\r\n            })\r\n            SoundManager.playEffect(\"fly\", false, false, false, 0.5);\r\n\r\n            //选择正确\r\n            labelNode.active = false;\r\n\r\n            ListenerManager.dispatch(EventType.TOUCH_CARD, touchNode);\r\n\r\n            let Particle: cc.Node = touchNode.getChildByName(\"Particle\");\r\n            Particle.active = true;\r\n            Particle.setScale(1);\r\n            Particle.getComponent(cc.ParticleSystem).resetSystem();\r\n\r\n        } else {\r\n            SoundManager.playEffect(\"wrong\", false, false, false, 0.5);\r\n            //选择错误\r\n            let wrongNode: cc.Node = touchNode.getChildByName(\"wrong\");\r\n            wrongNode.scale = 0;\r\n            wrongNode.active = true;\r\n            wrongNode.runAction(\r\n                cc.sequence(\r\n                    cc.scaleTo(0.3, 1).easing(cc.easeBackOut()),\r\n                    cc.scaleTo(0.3, 0).easing(cc.easeBackIn()),\r\n                    cc.callFunc(() => {\r\n                        wrongNode.active = false;\r\n                    })\r\n                )\r\n            );\r\n        }\r\n\r\n        ListenerManager.dispatch(EventType.START_TIME);\r\n    }\r\n\r\n    // 获取节点数字\r\n    private getNodeNumber(node: cc.Node): number {\r\n        return Number(node.getChildByName(\"label\").getComponent(cc.Label).string);\r\n    }\r\n\r\n    // 检查一行或一列是否形成Bingo\r\n    private checkLine(start: number, end: number, isRow: boolean): cc.Node[] {\r\n        const nodes: cc.Node[] = [];\r\n        const numbers: number[] = [];\r\n\r\n        for (let i = 0; i <= end; i++) {\r\n            const nodeName = isRow ? `${start}${i}` : `${i}${start}`;\r\n            const node = this.numberNodeParent.getChildByName(nodeName);\r\n            if (!node) continue;\r\n\r\n            const num = this.getNodeNumber(node);\r\n            if (num <= 0) {\r\n                numbers.push(num);\r\n                nodes.push(node);\r\n            }\r\n        }\r\n\r\n        if (nodes.length >= this.rowCount && numbers.indexOf(0) !== -1) {\r\n            return nodes;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // // 检查每一行\r\n    // checkRow() {\r\n    //     const nodeArr: cc.Node[][] = [];\r\n    //     for (let row = 0; row < this.rowCount; row++) {\r\n    //         const lineNodes = this.checkLine(row, this.colCount - 1, true);\r\n    //         if (lineNodes) {\r\n    //             nodeArr.push(lineNodes);\r\n    //         }\r\n    //     }\r\n    //     return nodeArr;\r\n    // }\r\n\r\n    // 检查每一列\r\n    checkColumn() {\r\n        const nodeArr: cc.Node[][] = [];\r\n        for (let col = 0; col < this.colCount; col++) {\r\n            const lineNodes = this.checkLine(col, this.rowCount - 1, false);\r\n            if (lineNodes) {\r\n                nodeArr.push(lineNodes);\r\n            }\r\n        }\r\n        return nodeArr;\r\n    }\r\n\r\n    // 检查对角线\r\n    // checkDiagonal() {\r\n    //     const nodeArr: cc.Node[][] = [];\r\n    //     const size = this.rowCount;\r\n\r\n    //     // 检查主对角线 (左上到右下)\r\n    //     const mainDiagonal: cc.Node[] = [];\r\n    //     const mainDiagonalNums: number[] = [];\r\n\r\n    //     // 检查副对角线 (右上到左下)\r\n    //     const antiDiagonal: cc.Node[] = [];\r\n    //     const antiDiagonalNums: number[] = [];\r\n\r\n    //     for (let i = 0; i < size; i++) {\r\n    //         // 主对角线\r\n    //         const mainNode = this.numberNodeParent.getChildByName(`${i}${i}`);\r\n    //         const mainNum = this.getNodeNumber(mainNode);\r\n    //         if (mainNum <= 0) {\r\n    //             mainDiagonalNums.push(mainNum);\r\n    //             mainDiagonal.push(mainNode);\r\n    //         }\r\n\r\n    //         // 副对角线\r\n    //         const antiNode = this.numberNodeParent.getChildByName(`${i}${size - i - 1}`);\r\n    //         const antiNum = this.getNodeNumber(antiNode);\r\n    //         if (antiNum <= 0) {\r\n    //             antiDiagonalNums.push(antiNum);\r\n    //             antiDiagonal.push(antiNode);\r\n    //         }\r\n    //     }\r\n\r\n    //     if (mainDiagonal.length >= size && mainDiagonalNums.indexOf(0) !== -1) {\r\n    //         nodeArr.push(mainDiagonal);\r\n    //     }\r\n\r\n    //     if (antiDiagonal.length >= size && antiDiagonalNums.indexOf(0) !== -1) {\r\n    //         nodeArr.push(antiDiagonal);\r\n    //     }\r\n\r\n    //     return nodeArr;\r\n    // }\r\n\r\n    checkBingo(numArr: number[][]) {\r\n        // 检查每一行\r\n        // let rowArr: cc.Node[][] = this.checkRow();\r\n\r\n        // 检查每一列\r\n        let colArr: cc.Node[][] = this.checkColumn();\r\n\r\n        // 检查对角线\r\n        // let diagArr: cc.Node[][] = this.checkDiagonal();\r\n\r\n        let nodeArr: cc.Node[][] = colArr;\r\n\r\n        let isBingo: boolean = false;\r\n        if (nodeArr.length > 0) {\r\n            SoundManager.playEffect(\"upgrade\", false, false, false);\r\n            for (let i = 0; i < nodeArr.length; i++) {\r\n                let curArr: cc.Node[] = nodeArr[i];\r\n                for (let j = 0; j < curArr.length; j++) {\r\n                    let node: cc.Node = curArr[j];\r\n                    node.getChildByName(\"label\").getComponent(cc.Label).string = \"-1\";\r\n                    let right: cc.Node = node.getChildByName(\"right\");\r\n                    let col: number = Number(node.name.split(\"\")[1]);\r\n                    let item: cc.Node = node.getChildByName(\"item\");\r\n                    Utils.setSpriteFrame(item, \"fruit\" + col);\r\n                    item.active = true;\r\n                    item.scale = 0;\r\n                    item.runAction(\r\n                        cc.sequence(\r\n                            cc.delayTime(0.12 * j),\r\n                            cc.callFunc(() => {\r\n                                right.active = false;\r\n                                let star: cc.Node = node.getChildByName(\"star\");\r\n                                star.active = true;\r\n                                star.getComponent(cc.Animation).play();\r\n                                star.getComponent(cc.Animation).on(cc.Animation.EventType.FINISHED, () => {\r\n                                    star.active = false;\r\n                                });\r\n                            }),\r\n                            cc.scaleTo(0.15, 0.6).easing(cc.easeBackOut()),\r\n                            cc.scaleTo(0.15, 0.5),\r\n                            cc.delayTime(0.15),\r\n                            cc.callFunc(() => {\r\n                                if (!isBingo) {\r\n                                    isBingo = true;\r\n                                    this.displayBingo(col);\r\n                                }\r\n                            }),\r\n                        ),\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private spriteName: string[] = [\"bingo\", \"double bingo\", \"trible bingo\", \"mega bingo\"];\r\n    //显示bingo动画\r\n    displayBingo(index: number) {\r\n        this.canTouch = false;\r\n        this.bingoNum += 1;\r\n        if (this.bingoNum >= 4) {\r\n            this.bingoNum = 4;\r\n        }\r\n        let star: cc.Node = this.bingoParent.getChildByName(\"star\");\r\n        this.playAn(star);\r\n\r\n        let bingo: cc.Node = this.bingoParent.getChildByName(\"bingo\");\r\n        bingo.active = true;\r\n        Utils.playSpine(bingo, this.spriteName[this.bingoNum - 1], false, () => {\r\n            bingo.active = false;\r\n            this.canTouch = true;\r\n        });\r\n\r\n        let leaf: cc.Node = this.bingoParent.getChildByName(\"leaf\");\r\n        // for (let i = 0; i < leaf.childrenCount; i++) {\r\n        //     let child: cc.Node = leaf.children[i];\r\n        //     child.active = true;\r\n        //     Utils.setSpriteFrame(child, \"leaf\" + (this.bingoNum - 1));\r\n        // }\r\n        Utils.setSpriteFrame(leaf, \"fruit\" + index);\r\n        leaf.active = true;\r\n        leaf.setScale(0);\r\n        leaf.runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0.5, 2).easing(cc.easeBackOut()),\r\n                cc.delayTime(0.5),\r\n                cc.scaleTo(0.5, 0).easing(cc.easeBackIn()),\r\n                cc.callFunc(() => {\r\n                    leaf.active = false;\r\n                })\r\n            )\r\n        );\r\n\r\n        SoundManager.playEffect(\"bingo_x\" + this.bingoNum, false, false, false);\r\n    }\r\n\r\n    //播放动画\r\n    playAn(node: cc.Node, callback: Function = null) {\r\n        node.active = true;\r\n        node.getComponent(cc.Animation).play();\r\n        node.getComponent(cc.Animation).on(cc.Animation.EventType.FINISHED, () => {\r\n            node.active = false;\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}